# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

enum PlaceType {
  Restaurant
}

type FoodPlace @model @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {
  type: PlaceType
  owner: String
  name: String!
  description: String
  phone: String
  address: Address
  takeoutTime: Int
  deliveryTime: Int
  minimumOrderPrice: Int
  isDisabled: Boolean
  priceRange: PriceRating
  shifts: [Shift]
  mainCategory: String
  categories: [String]
  documents: [Document]
}

type Document {
  type: String
  value: String
}

enum PriceRating {
  one
  two
  three
  four
  five
}

type Shift {
  dayOfWeek: String
  start: String
  end: String
}

type Address {
  district: String
  city: String
  state: String
  country: String
  latitude: Float
  longitude: Float
  timezone: String
  zipCode: String
  streetName: String
  streetNumber: String
}

type MenuGroup @model @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {
  foodPlace: FoodPlace @belongsTo
  name: String!
  template: String
  items: [MenuItem!]!
}

type MenuItem {
  name: String!
  description: String
  imageKey: String
  unitPrice: Float!
  unitMinPrice: Float!
  needChoices: Boolean
  discountPrice: Float
  choices: [Choice]
}

type Choice {
  name: String!
  min: Int!
  max: Int!
  items: [ChoiceItem]
}

type ChoiceItem {
  description: String!
  unitPrice: Float!
}

#########
# Order #
#########

type Order @model @auth(rules: [{ allow: public, operations: [create, read] }]) {
  items: [OrderItem!]!
  status: OrderStatus!
  table: String
  isTakeout: Boolean
  isDelivery: Boolean
}

type OrderItem {
  meta: MenuItem!
  quantity: Int!
  notes: String
}

enum OrderStatus {
  requested
  paid
}
